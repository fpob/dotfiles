#!/usr/bin/env python3

import click
import os

def rename(old, new, dry_run=False):
    if old != new:
        if dry_run:
            click.echo("{}\t{}".format(old, new))
        else:
            os.renames(old, new)

def replace(string, old, new, limit=0):
    if limit > 0:
        return string.replace(old, new, limit)
    elif limit < 0:
        return string[::-1].replace(old, new, -limit)[::-1]
    return string.replace(old, new)

@click.command()
@click.option("-s", "--separator", default="__",
              help="Oddělovač, kterým se nahradí oddělovač adresářové cesty")
@click.option("-r", "--reverse", is_flag=True, default=False,
              help="Reverzní operace - rozdělení do podadresářů")
@click.option("-l", "--limit", type=int, default=0,
              help="Limit nahrazení oddělovače, záporná hodnota omezuje z prava")
@click.option("-d", "--dry-run", is_flag=True, default=False,
              help="Nepřesunovat, pouze vypsat co by se přesunovalo, formát: tsv")
@click.argument("directory", type=click.Path(file_okay=False, exists=True),
                default=".")
def flatten(directory, separator, reverse, limit, dry_run):
    """
    Zploští adresářovou strukturu. Rekurzivně vyhledá v zadaném adresáři
    soubory a přesune je do daného adresáře. Přesunované soubory přejmenuje
    podle jejich relativní cesty s nahrazením oddelovače adresářů zadaným
    oddělovačem. Prázdné adresáře odstraňuje.

    Přidáním příznaku -r / --reverse lze provést revezní operaci - podle
    zadaného oddělovače rozdělit soubory v zadaném adresáři do podadresářů.
    Prochází se rekurzivně, ale může vytvořit více než jedno zanoření
    adresářů.
    """

    for root, dirs, files in os.walk(directory):
        for file in files:
            path = os.path.relpath(os.path.join(root, file), directory)

            if reverse:
                new_path = replace(path, separator, os.sep, limit)
            else:
                new_path = replace(path, os.sep, separator, limit)

            rename(os.path.join(directory, path), os.path.join(directory, new_path), dry_run)

if __name__ == "__main__":
    flatten()
