#!/usr/bin/env python3

import sys

import click
import yaml
import json


class PrettyDumper(yaml.SafeDumper):
    """Dumps prettier YAML than default SafeDumper."""

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # Disable keys sorting under Python >=3.7, keep dict order.
        # https://stackoverflow.com/a/55171433
        # https://mail.python.org/pipermail/python-dev/2017-December/151283.html
        if sys.version_info >= (3, 7):
            self.sort_keys = False

    def increase_indent(self, flow=False, indentless=False):
        # Indent block collection entries (intems starting with `-`, `?` or `:`.
        # See: https://stackoverflow.com/q/25108581
        return super().increase_indent(flow=flow, indentless=False)

    def write_plain(self, *args, **kwargs):
        # Don't put document end marker when dumping plain scalars.
        # See: https://stackoverflow.com/q/56950391
        super().write_plain(*args, **kwargs)
        self.open_ended = False

    def represent_scalar(self, tag, value, style=None):
        if tag.endswith(':str'):
            # Dump multiline strings as '|' blocks.
            if '\n' in value:
                style = '|'
            # Use double-quotes if string contains single-quote. Single-quote escape
            # (`''`) is less redable than backlash escape in double-quoted strings.
            elif "'" in value:
                style = '"'
        return super().represent_scalar(tag, value, style=style)


@click.command()
@click.argument('input_file', type=click.File('r'), default='-')
@click.option('-o', '--output-file', type=click.File('w'), default='-')
@click.option('-w', '--width', type=int, default=80,
              help='Maximal line width')
@click.pass_context
def cli(ctx, input_file, output_file, width):
    """Parse JSON file and print data as YAML."""
    try:
        data = json.load(input_file)
        output_file.write(yaml.dump(data, Dumper=PrettyDumper, width=width))
    except Exception as e:
        click.echo(e, err=True)
        ctx.exit(1)


if __name__ == '__main__':
    # pylint: disable=unexpected-keyword-arg,no-value-for-parameter
    cli()
