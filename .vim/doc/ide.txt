*ide*
                    __     ___           ___ ____  _____  ~
                    \ \   / (_)_ __ ___ |_ _|  _ \| ____| ~
                     \ \ / /| | '_ ` _ \ | || | | |  _|   ~
                      \ V / | | | | | | || || |_| | |___  ~
                       \_/  |_|_| |_| |_|___|____/|_____| ~


    Pluginy .................................... |ide-pluginy|
        CtrlP  ................................. |ide-pluginy-ctrlp|
        Surround  .............................. |ide-pluginy-surround|
        Signature  ............................. |ide-pluginy-signature|
        Easymotion ............................. |ide-pluginy-easymotion|
        Vdebug  ................................ |ide-pluginy-vdebug|
    Vim ........................................ |ide-vim|
        Klavesy  ............................... |ide-vim-klavesy|
        Registry  .............................. |ide-vim-registry|
        Rozsahy  ............................... |ide-vim-rozsahy|
        Ctags  ................................. |ide-vim-ctags|
        Diff  .................................. |ide-vim-diff|
        Preklad  ............................... |ide-vim-preklad|

==============================================================================
PLUGINY                                          *ide-pluginy*

http://vimawesome.com/

|standard-plugin-list|
|local-additions|

------------------------------------------------------------------------------
JAVACOMPLETE                                     *ide-javacomplete*

<leader>jI      Imports AddMissing
<leader>jR      Imports RemoveUnused
<leader>ji      Imports AddSmart
<leader>jii     Imports Add

<leader>jM      Generate AbstractMethods
<leader>jA      Generate Accessors
<leader>js      Generate AccessorSetter
<leader>jg      Generate AccessorGetter
<leader>ja      Generate AccessorSetterGetter
<leader>jts     Generate ToString
<leader>jeq     Generate EqualsAndHashCode
<leader>jc      Generate Constructor
<leader>jcc     Generate DefaultConstructor

------------------------------------------------------------------------------
CTRLP                                            *ide-pluginy-ctrlp*

<Ctrl-P>  zobrazit
<Ctrl-D>  přepnutí vyhledávání mezi jménem souboru a cestou (výchozí)
<Ctrl-R>  přepnutí mezi výchozím řetězcovým vyhledáváním a regexu
<Ctrl-T>  otevřít soubor v nové záložce
<Ctrl-V>  vertikální rozdělení
<Ctrl-S>  horizontální rozdělení
<Ctrl-Z>  označení souboru
<Ctrl-O>  otevření všech označených souborů
<Tab>     doplnění názvu adresáře

------------------------------------------------------------------------------
SURROUND                                         *ide-pluginy-surround*

ds"          vymaže uvozovky okolo textu (v němž se nachází kurzor)
ds(          vymaže kulaté závorky okolo textu (levou i pravou)
ds)          dtto
ds[          vymaže hranaté závorky okolo textu
dst          vymaže tag okolo textu (platné pro XML a HTML)
ysaw"        zapíše uvozovky okolo slova („aw“ znamená „a word“)
ysaw(        zapíše pravou a levou kulatou závorku okolo slova („aw“ = „a
             word“)
ysW(         text od kurzoru až po další slovo bude uzavřen mezi kulaté
             závorky
ysip<div>    celý textový odstavec se umístí mezi párové značky <div>
yssB         celý řádek se umístí do složených závorek
cs"'         nahradí obalové uvozovky za apostrofy
cs'<strong>  nahradí apostrofy okolo textu za párovou značku <strong>

------------------------------------------------------------------------------
SIGNATURE                                        *ide-pluginy-signature*

dma – dmz       smazání lokální značky a-z
dmA – dmZ       smazání globální značky A-Z
m,              vytvoření nové značky, automatická volba písmene
m.              vytvoření nové značky, automatická volba písmene; pokud značka
                existuje, zruší se

Značky ve Vimu ~

`:marks`          výpis všech právě aktivních značek
:marks značka   výpis vybrané značky
ma – mz         definice lokální značky a-z
mA – mZ         definice globální značky A-Z
'a – 'z         skok na řádek, kde je značka definovaná (jedná se o příkaz
                pohybu kurzoru!)
'A – 'Z         skok na soubor a řádek, kde je značka definovaná
`a – `z         skok na přesné místo, kde je značka definovaná (jedná se o
                příkaz pohybu kurzoru!)
``A – `Z         skok na přesné místo (řádek i sloupec), kde je značka
                definovaná

Typy značek ~

a-z   manuálně      značky lokální v rámci souboru
A-Z   manuálně      značky globální, ke značce je připojeno i jméno souboru
0–9   automaticky   posledních deset pozic kurzoru při opuštění Vimu
<     automaticky   začátek vybraného bloku
>     automaticky   konec vybraného bloku
"     automaticky   pozice kurzoru při zavření bloku
^     automaticky   pozice kurzoru, na níž se kurzor naposledy nacházel ve
                    vkládacím režimu

------------------------------------------------------------------------------
EASYMOTION                                       *ide-pluginy-easymotion*

Note: S výchozím mapováním je nutné <Leader> zmáčknout dvakrát.

<Leader>f{char}   Find {char} to the right. See |f|.
<Leader>F{char}   Find {char} to the left. See |F|.
<Leader>t{char}   Till before the {char} to the right. See |t|.
<Leader>T{char}   Till after the {char} to the left. See |T|.
<Leader>w         Beginning of word forward. See |w|.
<Leader>W         Beginning of WORD forward. See |W|.
<Leader>b         Beginning of word backward. See |b|.
<Leader>B         Beginning of WORD backward. See |B|.
<Leader>e         End of word forward. See |e|.
<Leader>E         End of WORD forward. See |E|.
<Leader>ge        End of word backward. See |ge|.
<Leader>gE        End of WORD backward. See |gE|.
<Leader>j         Line downward. See |j|.
<Leader>k         Line upward. See |k|.
<Leader>n         Jump to latest "/" or "?" forward. See |n|.
<Leader>N         Jump to latest "/" or "?" backward. See |N|.
<Leader>s         Find(Search) {char} forward and backward.
                  See |f| and |F|.

------------------------------------------------------------------------------
VDEBUG                                           *ide-pluginy-vdebug*

Debugování skriptů v PHP (xdebug), Pythonu, ...

Klávesy ~

<S-F5>     Spuštění debuggeru nebo přechod další breakpoint
<S-F9>     Spuštění debuggeru a pozastavení na místě kde je kurzor
<S-F2>     Step Over, další příkaz v kódu
<S-F3>     Step Into, další příkaz v kódu, vstupuje do funkcí
<S-F4>     Step Out, vystoupení z funkce
<S-F6>     Close, zastaví program
<S-F7>     Detach, odpojí debugger, program doběhne
<S-F10>    Nastavit breakpoint na řádek
<S-F11>    Získat kontext
<S-F12>    Vykonat to co je pod kurzorem
<Leader>e  Vykonat to co je vybráno ve vizuálním režimu

==============================================================================
VIM                                              *ide-vim*

|quickref|          Quick Refence
|usr_toc|           User Manual
|reference_toc|     Reference Manual
|local-additions|   Local Additions

------------------------------------------------------------------------------
KLAVESY                                          *ide-vim-klavesy*

Pohyb ~

^y / ^e         nahoru/dolů
^d / ^u         půl stránky nahoru/dolů
^f / ^b         page down-up

#H / M / #L     přesune kurzor nahoru/doprostřed/dolů, # = n-tý řádek
                s nastavením 'scrolloff' neskáče uplně nahoru/dolů - při
                mazání tedy některé řádky nahoře/dole zůstanou

w / e           o slovo dopředu - začátek/konec slova
b / ge          o slovo zpět - začátek/konec slova
W / E           o slovo dopředu - začátek/konec slova
B / gE          o slovo zpět - začátek/konec slova
( / )           o větu zpět/dopředu
{ / }           o blok zpět/dopředu

g0  začátek řádku v okně
g^  1. znak na řádku v okně
g$  poslední znak na řádku v okně
gj  další řádek v okně
gk  předchozí řádek v okně
gI  vložit na 1. sloupec (ne na začátek textu na řádku jako I)
gv  zopakovat předchozí výběr
g;  skok na posledni zmenu

Změna okna ~

zt      aktuální řádek nahoru, bude 'scrolloff'-tý řádek
zz      aktuální řádek doprostřed
zb      aktuální řádek dolů, bude 'scrolloff'-tý řádek od spodu
z#<Cr>  změní velikost okna - rychlejší překreslování

Foldy ~

zf#j        vytvoří "fold" z # řádek od aktuálního kurzoru
zf/string   vytvoří fold od aktuálního řádku k řetězci string
zj          přesune kurzor na další fold
zk          přesune kurzor na předchozí fold
zo          otevře fold na kurzoru
zO          otevře všechny foldy na kurzoru
zm          zavře jeden fold level (tj všechny foldy na úrovni foldu na kterém
            je kurzor)
zM          zavře všechny foldy
zr          otevře jeden fold level
zR          otevře všechny foldy
zd          smaze fold na kurzoru
zE          smaze všechny foldy
[z          přesuen se na zacatek otevřeneho foldu
]z          přesune se na konec otevřeneho foldu

Editace~

#<C-a>      Inkrementace
#<C-x>      Dekrementace
2m6         2. radek vymění s 6. řádkem

<C-r>#      Vložit registr v insert režimu, # je číslo
<C-r><C-r># Vložit registr v insert režimu, # je písmeno
<C-w>       Smazat slovo přek kurzorem v insert režimu
<C-d>       Odsadit doleva v insert režimu
<C-t>       Odsadit doprava v insert režimu

Výběry~

aw    all word - slovo, včetně mezer
iw    inner word - slovo kromě mezer
aW    all Word - „slovo“ (něco co neobsahuje mezery), včetně mezer
iW    inner Word - „slovo“ kromě mezer
ab    all block - blok mezi kulatými závorkami, včetně
ib    inner block - ab kromě závorek
aB    all Block - blok mezi složenými závorkami, včetně
iB    inner Block - aB kromě závorek
at    all tag - blok mezi špičatými závorkami, včetně
it    inner tag - at kromě závorek
as    all sentence - věta, vč. mezer
is    inner sentence - věta
ap    all paragraph - odstavec, včetne okrajů (nový řádek)
ip    inner paragraph - odstavec, jen text

Mazání~

dab   delete a block : vymazání textu mezi kulatými závorkami včetně závorek
dib   delete inner block : vymazání textu mezi kulatými závorkami bez
      závorek (ty zůstanou v textu zachovány)
daB   delete a Block : vymazání textu mezi složenými závorkami včetně závorek
diB   delete inner Block : vymazání textu mezi složenými závorkami bez závorek
dat   delete a tag : vymazání textu umístěného v párové značce, včetně
      otvírací i zavírací značky (platí zejména pro soubory HTML, XHTML a XML)
dit   delete inner tag : vymazání textu umístěného v párové značce,
      například v odstavci (platí zejména pro soubory HTML, XHTML a XML)

Změny ~

cc    změnit celý řádek
S     změnit celý řádek
C     změnit od kurzoru do konce řádku
cab   change a block : změna textu mezi kulatými závorkami včetně závorek
cib   change inner block : změna textu mezi kulatými závorkami
caB   change a Block : změna textu mezi složenými závorkami včetně závorek
ciB   change inner Block : změna textu mezi složenými závorkami
ci"   change inner " : změna všeho mezi ""

%     přeskok mezi znaky definovanými volbou matchpairs

Zrovnání/formátování ~

:%ce  zarovná celý soubor na střed, místo % může být rozsah
:%le  zarovná celý soubor vlevo, místo % může být rozsah
:%ri  zarovná celý soubor pravo, místo % může být rozsah
=     zarovnání textu vybraného libovolnou výběrovou operací
=aB   indent a Block : kombinace operátoru = a výběru bloku mezi {}
>     posun textu vybraného libovolnou výběrovou operací doprava o shiftwidth
<     posun textu vybraného libovolnou výběrovou operací doleva o shiftwidth
>>    posun jediného řádku doprava o hodnotu nastavenou pomocí volby set
      shiftwidth
<<    posun jediného řádku doleva o hodnotu nastavenou pomocí volby set
      shiftwidth

Vyhledávání~

#   předchozí slovo pod kurzorem
*   další slovo pod kurzorem
g#  předchozí slovo pod kurzorem, i částečně odpovídající
g*  další slovo pod kurzorem, i částečně odpovídající
gd  skok na lokální definici symbolu pod kurzorem
gD  skok na na globální definici symbolu pod kurzorem

Ostatní~

<C-g>   Zobrazí název souboru a pozici
g<C-g>  Zobrazí sloupec kurzoru, řádek, ...
ga      Zobrazí ASCII hodnotu znaku pod kurzorem
g8      Zobrazí UTF-8 hodnotu znaku pod kurzorem
gf      Otevře soubor jehož název je pod kruzorem
guu     Převede celý řádek na malé písmena
gUU     Převede celý řádek na velké písmena
<C-d>   Při doplňovaní zobrazí celý seznam možností

------------------------------------------------------------------------------
REGISTRY                                         *ide-vim-registry*

a-z  registry, které je možné přímo měnit uživatelem
0–9  registry naplňované automaticky příkazy d a y
%    registr obsahující jméno právě editovaného souboru
:    registr obsahující poslední příkaz, vhodné při vyvolání tohoto příkazu
     jako makra
=    pseudoregistr používaný pro výpočet matematických a „řetězcových“ výrazů
*    registr obsahující obsah schránky (viz též sedmou kapitolu s vysvětlením)
+    registr obsahující obsah schránky (viz též sedmou kapitolu s vysvětlením)
/    registr obsahující posledně vyhledávaný řetězec (resp. text
     odpovídající regulárnímu výrazu)
"    implicitní registr pro operace c, d, s nebo y
–    implicitní registr pro operace, které mění menší část textu, než je
     jeden textový řádek

`:reg`  vypsání obsahu registru
"ayy  zkopírování řádku do registru 'a'
"byy  zkopírování řádku do registru 'b'
"ap   vysypání registru 'a'

------------------------------------------------------------------------------
ROZSAHY                                          *ide-vim-rozsahy*

12              řádka 12
12,15           řádky 12 až 15
/dopis/,/akcie  Rozsah od řádky obsahující „dopis“ k řádce obsahující „akcie“
                včetně.
.+3,$-1         Rozsah od řádky 3 řádky pod aktuální řádkou (na které je
                kurzor) až po předposlední řádku v souboru. (tečka
                reprezentující aktuální řádku se může vynechat)
'a,'b           Od řádky označené (mark) jako a až po řádku s mark b
.,/start/-      Totéž co .,/start/-1 (jednička je defaultní hodnota pro -)
?start?,.+      První řádka, která před aktuální řádkou obsahuje „start“ až po
                jednu řádku za aktuální řádkou
.-,.+           Rozsah od předcházející řádky aktuální řádce až po následující
                (celkem 3 řádky).
$-10,$          Posledních 10 řádek

Příklad: >
    :5,.d
<smaže řádky od 5. až po aktuální

------------------------------------------------------------------------------
CTAGS                                            *ide-vim-ctags*

Vygeneruje soubor znacek, pak je mozne skakat na definice, doplnovat pomoci
omicompletion atd.

`:!ctags -R`    vygeneruje v aktuálním adresáři soubor `tags` s tagy
              (identifikátory funkcí, struktur, datových typů, maker atd.)
`:tag regex`, `Ctrl+]`, `Ctrl+klik`, `g klik`   skok na deklaraci
<Ctrl-T>      skok zpět
`:tags`         výpis celého zásobníku
<C-w>}        náhled na tag pod kurzorem
<C-w>z        zavře okno s náhledem tagu

------------------------------------------------------------------------------
DIFF                                             *ide-vim-diff*

[c        skok na začátek předchozího bloku se změnami
]c        skok na začátek dalšího bloku se změnami
dp        diff-put - přenesení změn **DO** druhého souboru
do        diff-obtain - přenesení změn **Z** druhého souboru
dp a do   funguje i pro vizuální bloky

------------------------------------------------------------------------------
PREKLAD                                          *ide-vim-preklad*

`:make`    spuštění překladu, nastavení 'makeprg' (:set makeprg=gcc \%)
`:clist`   výpis chybových hlášek       <Ctrl-F5>
`:copen`   seznam chub ve split oknu    <Ctrl-F8>
`:cprev`   předchozí chyba              <Ctrl-F6>
`:cnext`   další chyba                  <Ctrl-F7>
`:cfirst`  přechod na 1. chybu
`:clast`   poslední chyba



 vim:tw=78:ts=4:sw=4:ft=help:norl:
