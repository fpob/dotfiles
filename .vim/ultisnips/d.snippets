snippet imp "import" b
import ${1:std.stdio};$0
endsnippet

snippet main "void main()" b
void main()
{
	$0
}
endsnippet

snippet main "void main(string[] args)" b
void main(string[] args)
{
	$0
}
endsnippet

snippet main "int main(string[] args)" b
int main(string[] args)
{
	$0
	return 0;
}
endsnippet

snippet if
if (${1:/* condition */}) {
	${VISUAL}$0
}
endsnippet

snippet elif
else if (${1:/* condition */}) {
	${VISUAL}$0
}
endsnippet

snippet else
else {
	${VISUAL}$0
}
endsnippet

snippet do
do {
	${VISUAL}$0
} while (${1:/* condition */});
endsnippet

snippet while
while (${1:/* condition */}) {
	${VISUAL}$0
}
endsnippet

snippet for
for (${1}; ${2}; ${3}) {
	${VISUAL}$0
}
endsnippet

snippet fori
for (int ${1:i} = 0; $1 < ${2:count}; $1++) {
	${VISUAL}$0
}
endsnippet

snippet dfor "d-style for"
for ({ ${1:/* declaration */} } ${2:/* condition */}; ${3:/* code */})) {
	${VISUAL}$0
}
endsnippet

snippet fore "foreach"
foreach (${1:item}; ${2:array}) {
	${VISUAL}$0
}
endsnippet

snippet forer "foreach_reverse"
foreach_reverse (${1:item}; ${2:array}) {
	${VISUAL}$0
}
endsnippet

snippet switch
switch (${1:variable}) {
	case '${2:value}':
		${3:// code...}
		break;
	$0
	default:
		${4:// code...}
		break;
}
endsnippet

snippet case
case '${1:value}':
	${2:// code...}
	break;
endsnippet

snippet fun "" b
${2:void} ${1:function_name}(${3})
{
	$0
}
endsnippet

snippet tfun "" b
${2:void} ${1:function_name}(${3:T})(${4})
{
	$0
}
endsnippet

snippet struct "" b
struct ${1:name} {
	$0
}
endsnippet

snippet enum "" b
enum ${2:name} {
	$0
}
endsnippet

snippet class "" b
class ${1:Name}
{
	$0
}
endsnippet

snippet iface "" b
interface ${1:Name}
{
	$0
}
endsnippet

snippet . "this" i
this.
endsnippet
