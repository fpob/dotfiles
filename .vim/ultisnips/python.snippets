snippet #! "Hashbang" b
#!/usr/bin/env python3

$0
endsnippet

snippet imp "import ..." b
import ${1:module}
$0
endsnippet

snippet fimp "from ... import ..." b
from ${1:module} import ${2:symbol}
$0
endsnippet

snippet "" "docstring"
"""
${VISUAL}$0
"""
endsnippet

snippet ""\ "docstring \"
"""\
${VISUAL}$0
"""
endsnippet

snippet if "if ..." b
if ${1:condition}:
	${VISUAL}$0
endsnippet

snippet else "else" b
else:
	${VISUAL}$0
endsnippet

snippet elif "elif ..." b
elif ${1:condition}:
	${VISUAL}$0
endsnippet

snippet while "while ..." b
while ${1:condition}:
	${VISUAL}$0
endsnippet

snippet for "for ... in ..." b
for ${1:needle} in ${2:haystack}:
	${VISUAL}$0
endsnippet

snippet fori "for i in ..." b
for i in ${2:items}:
	${VISUAL}$0
endsnippet

snippet with "with ..." b
with ${1:with_item}:
	${VISUAL}$0
endsnippet

snippet withf "With ... as f" b
with ${1:with_item} as f:
	${VISUAL}$0
endsnippet

snippet def "def ...(...)" b
def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
	$0
endsnippet

snippet la "lambda ...: ..." b
lambda ${2:vars}: $0
endsnippet

snippet try "try: ... except: ..." b
try:
	${VISUAL}${1}
except ${2:Exception} as ${3:e}:
	${4:pass}
endsnippet

snippet finally "finally" b
finally:
	${VISUAL}$0
endsnippet

snippet . "self" i
self.$0
endsnippet

snippet cl "class ..." b
class ${1:ClassName}:
	$0
endsnippet

snippet prop "property" b
@property
def ${1:foo}(self):
	${2:return self._$1}$0
endsnippet

snippet props "property.setter" b
@$1.setter
def ${1:foo}(self, value):
	${2:self._$1 = value}$0
endsnippet

snippet __ "magic" i
__${1:init}__$0
endsnippet

snippet ifm "if main" b
if __name__ == '__main__':
	${VISUAL}$0
endsnippet
